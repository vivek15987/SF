<apex:component controller="geopointe.StaticMap" access="global">
	<apex:attribute name="mapProvider"
					description="The map provider of the map image. Acceptable values are 'default' (obtains the value from your organization settings), 'mq' 
					for MapQuest or 'osm' for Open Street Map. If you do not specify a value, MapQuest will be used." 
					type="String" required="false" access="global" assignTo="{!mapProvider}" default="default" />
		
	<apex:attribute name="width"
					description="The width, in pixels, of the map. If you do not specify a value, the map defaults to 400 pixels wide. MapQuest and OSM support 
					sizes of 50 - 2048 pixels." 
					type="Integer" required="false" access="global" assignTo="{!width}" default="400" />
		
	<apex:attribute name="height"
					description="The height, in pixels, of the map. If you do not specify a value, the map defaults to 400 pixels tall. MapQuest  and OSM support 
					sizes of 50 - 2048 pixels." 
					type="Integer" required="false" access="global" assignTo="{!height}" default="400" />
		
	<apex:attribute name="zoom"
					description="The zoom level to use on the map. If items are included in the locationIDs parameter, zoom level is optional because 
					the map will do a 'bestFit' process to figure out the optimum center and zoom. However, you can specify a value here to override 
					that zoom level.  To set the zoom, a center value must also be provided. Acceptable values for this parameter are Integers 1 
					(global view) through 16 (street view) for MapQuest and OSM or 0 (global view)." 
					type="Integer" required="false" access="global" assignTo="{!zoom}" />
		
	<apex:attribute name="center"
					description="Defines the center for the map.  If items are included in the locationIDs parameter, center is optional 
					because the map will do a 'bestFit' process to figure out the optimum center and zoom.  However, you can specify a value here to 
					override that center point. For MapQuest and OSM, the override will only work if a zoom level is also provided. Acceptable values for this 
					parameter are either a Salesforce record ID or a latitude, longitude pair (in the lat,lon format)."
					type="String" required="false" access="global" assignTo="{!center}" />
		
	<apex:attribute name="mapType"
					description="The type of map to return. Acceptable values are 'map','sat','hyb', 'ter' or 'sv' (map, satellite, hybrid, terrain or streetview, respectively). 
					Only Google supports 'ter' (terrain) and 'sv' (streetview).  If you do not specify a value, it will default to 'map'." 
					type="String" required="false" access="global" assignTo="{!mapType}" default="map" />
					
	<apex:attribute name="locationIDs"
					description="A comma separated list of record IDs that correspond to the records that should be plotted on the map. The record IDs
					you include must be associated with Map Objects defined in Geopointe Setup and those records must have already been geocoded. If 
					you do not include a center property, the map will perform a 'bestFit' around these points. If you set useIconLabels to true, the 
					icons will be labeled in the order they are included in the locationIDs string (using numbers for MapQuest and OSM)."
					type="String" required="false" access="global" assignTo="{!locationIDs}" />
	
	<apex:attribute name="imageType"
					description="The file format of the map image. Acceptable values are 'jpg','jpeg','png' or 'gif'. 
					If you do not specify a value, it will default to 'png'." 
					type="String" required="false" access="global" assignTo="{!imageType}" default="png" />
									
	<apex:attribute name="iconColor"
					description="The color of the icon to use when plotting records in the locationIDs.  Acceptable values for MapQuest and OSM are 
					'blue','green','orange','purple','white' or 'yellow'."
					type="String" required="false" access="global" assignTo="{!iconColor}" />
	
	<apex:attribute name="useIconLabels"
					description="Whether or not to label the icons when plotting the locationIDs  Acceptable values are 
					true or false. If you do not specify a value, it will default to false."
					type="Boolean" required="false" access="global" assignTo="{!useIconLabels}" default="false" />
					
	<apex:attribute name="declutter"
					description="Turning declutter on will spread out the icons on the map when they are overlapping each other.
					Acceptable values are true or false. If you do not specify a value, it will default to false. This parameter only applies to 
					MapQuest maps." 
					type="Boolean" required="false" access="global" assignTo="{!declutter}" default="false" />
	
	<apex:outputPanel rendered="{!hasStaticMapPerm}">		
		<apex:outputPanel rendered="{!MapURL != 'notGeocoded'}">
			<img src="{!mapURL}" alt="{!MapURL}"/>
		</apex:outputPanel>

		<apex:image value="{!URLFOR($Resource.geopointe__images, 'staticmap_unsupportedMO.png')}" alt="Not Yet Geocoded" rendered="{!MapURL == 'notGeocoded'}"/>
	</apex:outputPanel>	

	<apex:image rendered="{!NOT(hasStaticMapPerm)}" value="{!URLFOR($Resource.geopointe__images, 'deprecatedInline.png')}"/>

	<script src="{!URLFOR($Resource.jquery, '/jquery-1.8.3.min.js')}"></script> <!-- core jQuery -->

	<script type="text/javascript">
		var parentURL = window.location.href;

		var req = {
	    	type: 'GET',
	    	url: 'https://api.geopointe.io/v1/utils/staticMapLoad?orgId={!$Organization.Id}&url='+parentURL,
	    	dataType: 'jsonp'
	    };
	    req.error = function(jqXHR, textStatus, errorThrown){
            console.log(textStatus);
        }

	    //Do the request only if on a customer page, the url does not contain geopointe.
	    if(parentURL.indexOf('geopointe.') == -1){
	    	jQuery.ajax(req);
	    }
	</script>
</apex:component>